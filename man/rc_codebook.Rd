% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rc_codebook.R
\name{rc_codebook}
\alias{rc_codebook}
\title{Recode values within a wide dataset}
\usage{
rc_codebook(data, cb, cb_var_col, cb_val_old, cb_val_new, cb_level_idx = NULL)
}
\arguments{
\item{data}{a \code{data.frame} in wide-format such that each row
corresponds to a single participant and each column corresponds to a
single variable.}

\item{cb}{a \code{data.frame} containing at least one column
,\code{cb_var_col}, corresponding to
variable names (column names) within \code{data},
one column, \code{cb_val_old}, corresponding to old values
within \code{data} that will be replaced,
and one column, \code{cb_val_new}, corresponding to new values that will be
used to replace the old.}

\item{cb_var_col}{a character vector of length 1 corresponding to a column
within \code{cb} containing variable names from \code{data}}

\item{cb_val_old}{a character vector of length 1 corresponding to a column
within \code{cb} containing old values within \code{data}}

\item{cb_val_new}{a character vector of length 1 corresponding to a column
within \code{cb} containing values that will be used to substitute
current values within \code{data}
#'@param cb_level_idx a character vector of length 1 corresponding to a column
within \code{cb} containing values that will be used to assign the order
of factor levels within recoded values of \code{data}}
}
\value{
A \code{data.frame} similar to \code{data}, except that
values from some values will have been recoded based on \code{cb}
}
\description{
Function to recode values within columns of a dataset using a custom
codebook
}
\details{
The purpose of this function is to make recoding variables within a dataset,
easier through the use of a user-generated codebook. The intent is that
this codebook will be stored as a tabular data file, which may be more
easily edited, and subsequently imported during for analysis.
Storing the codebook in this way may also make reporting changes in
variable coding into others, who may not be familiar with R. Moreover,
delimited text files may be version controlled to document changes to
variable coding schemes throughout the analysis.

Preliminary steps include importing the dataset as
a wide-format \code{data.frame}, which will
correspond to the \code{data} argument and generating a \code{data.frame}
that will serve as the codebook, \code{cb}.
\code{cb} must contain at least three
columns whose column names are specified in the \code{cb_var_col},
\code{cb_val_old}, and \code{cb_val_new} arguments of this function.
\code{cb_var_col} corresponds to a column within \code{cb}
that contains the names of variables to be edited. These variables will in
turn correspond to column names within \code{data}.
\code{cb_val_old} will specify
the name of a column in \code{cb} that contains old values within \code{data}
that may subsequently be recoded. \code{cb_val_old} corresponds to a column
in \code{cb} that contains new value for each old value.
}
\examples{
cb <- data.frame(cb_var_col = c("x", "x", "y", "y"),
                cb_val_old = c("0", "1", "0", "1"),
                cb_val_new = c("no", "yes", "no", "yes"),
                stringsAsFactors = FALSE)
data <- data.frame(PID = 1:4,
                  x = c("0", "1", "1", "0"),
                  y = c("1", "1", "0", "0"),
                  stringsAsFactors = FALSE)
out <- rc_codebook(data, cb, "cb_var_col", "cb_val_old", "cb_val_new")
out
}
